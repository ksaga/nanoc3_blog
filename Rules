#!/usr/bin/env ruby

preprocess do
  # authors may unpublish items by setting meta attribute publish: false
  items.delete_if { |item| item[:publish] == false }

  copy_static
  create_tag_pages
  add_update_item_attributes

  # create tag cloud http://pastie.org/599853
  cc = render('_tag_cloud', :items => items)
  items.each do |item|
    if not item[:cloudcode]
      item[:cloudcode] = cc
    end
  end
end

compile '*' do
  # item[:extension] returns 'html.erb' for multi-dotted filename
  ext = item[:extension].nil? ? nil : item[:extension].split('.').last

  if ext == 'erb'
    filter :erubis
  elsif ext == 'cr' 
    filter :wikicreole
  elsif ext == 'haml' || ext.nil?
    filter :haml
  elsif ext == 'md' || ext == 'markdown'
    filter :erubis
    filter :rdiscount
  else
    raise "Filter is not configured for #{item.identifier} in Rules file."
  end

  # use layouts with .html extension or layout specified in meta
  item[:layout] = "none" unless item[:layout] || File.extname(route_path(item)) == '.html' 

  layout 'default' unless item[:layout] == "none"
end

route '/tags/*/' do
  item.identifier.chop + '.html'
end

route '/sticky/' do
  nil
end

route '*' do
  route_path(item)
end

layout '*', :erubis
